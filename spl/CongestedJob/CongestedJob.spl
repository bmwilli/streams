composite CongestedJob {
  graph
    stream <rstring msg, uint64 i> BeaconStream = Beacon() {
      param period : 0.002;
      output BeaconStream : msg = "Hello, World #" + (rstring)IterationCount(), i = IterationCount();
      config placement : partitionExlocation("Separate");
    }

    stream <BeaconStream> FilterStream = Filter(BeaconStream) {
      param filter : (i % (uint64)2) == (uint64)0;
      config placement : partitionColocation("SlowFilter"),
                         partitionExlocation("Separate");
    }

    stream <BeaconStream> SlowStream = Custom(FilterStream) {
      logic onTuple FilterStream : {
        block(0.5);
        submit(FilterStream,SlowStream);
      }
      config placement : partitionColocation("SlowFilter");
    }

    stream <BeaconStream> ThreadedPortStream = Custom(SlowStream) {
      logic
        state : mutable float64 t;
        onTuple SlowStream: {
		t = random();
		block(t);
		submit(SlowStream,ThreadedPortStream);
	}
      config threadedPort : queue(SlowStream, Sys.DropFirst, 100);
    }

    stream <BeaconStream> SinkStream = Functor(ThreadedPortStream) {
    }

    () as Sink = Custom(SinkStream as In) {
    }
}
