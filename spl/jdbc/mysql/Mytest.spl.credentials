use com.ibm.streamsx.jdbc::*;

composite Mytest {

  param
    expression<rstring> $jdbcDriverLib: getSubmissionTimeValue("driver","opt/mysql-connector-java-8.0.15.jar");
    expression<rstring> $jdbcClassName: getSubmissionTimeValue("class","com.mysql.cj.jdbc.Driver");
    expression<rstring> $jdbcUrl: getSubmissionTimeValue("url","jdbc:mysql://localhost:3306/streams?serverTimezone=UTC");
    expression<rstring> $jdbcUser: getSubmissionTimeValue("user","ibmadmin");
    expression<rstring> $jdbcPassword: getSubmissionTimeValue("password","Str3@msIsF@st3st");
    expression<rstring> $credentials: getSubmissionTimeValue("credentials");

  type DBType = tuple<
    uint64 i,
    rstring name,
     rstring owner,
     rstring species,
    boolean hasResultSet,
    rstring sqlStatus
  >;

  graph
    stream<DBType> DataIn = Custom() {
      logic
        state : {
          mutable DBType ot = {};
        }
        onProcess : {
          ot.i = 0ul;
          submit(ot,DataIn); 
          ot.i = 1ul;
          submit(ot,DataIn); 
          ot.i = 2ul;
          submit(ot,DataIn); 
          ot.i = 3ul;
          submit(ot,DataIn); 
        }
    }

    stream<DBType> Test = Custom(DataIn as In) {
      logic
        onTuple In: submit(In,Test);
        onPunct In : println("Test: " + (rstring)currentPunct());
    }


    stream<DBType> DBoutput = JDBCRun(Test) {
      param
        jdbcDriverLib: $jdbcDriverLib; 
        jdbcClassName: $jdbcClassName;
        //jdbcUrl: $jdbcUrl;
        //jdbcUser: $jdbcUser;
        //jdbcPassword: $jdbcPassword;
        credentials: $credentials;
        statement: "select name,owner,species from pet";
        transactionSize: 2;
        hasResultSetAttr: "hasResultSet";
        sqlStatusAttr: "sqlStatus";
    }

    () as Sink = Custom(DBoutput) {
      logic
        onTuple DBoutput : println(DBoutput);
        onPunct DBoutput : println("Sink: " + (rstring)currentPunct());
    }
}

